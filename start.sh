#!/bin/bash

# Script de inicializa√ß√£o para EasyPanel com otimiza√ß√µes de performance
echo "üöÄ Iniciando Instagram API FastAPI..."
echo "üîß Vers√£o: 2.0.0"
echo "üìÖ $(date)"
echo "üñ•Ô∏è CPU: $(nproc) cores"
echo "üíæ RAM: $(free -h | awk '/^Mem:/{print $2}')"
echo "=" * 50

# Verifica se estamos no container
if [ -d "/app" ]; then
    echo "‚úÖ Executando no container Docker"
    cd /app
else
    echo "‚ö†Ô∏è Executando fora do container"
fi

# Otimiza√ß√µes do sistema
echo "üîß Aplicando otimiza√ß√µes de sistema..."

# Ajusta limites do sistema para melhor performance
ulimit -n 65536 2>/dev/null || echo "‚ö†Ô∏è N√£o foi poss√≠vel ajustar limite de arquivos"

# Executa a inicializa√ß√£o do banco de dados
echo "üîß Inicializando banco de dados..."
python init_db.py
DB_INIT_RESULT=$?

# Verifica se a inicializa√ß√£o foi bem-sucedida
if [ $DB_INIT_RESULT -eq 0 ]; then
    echo "‚úÖ Banco de dados inicializado com sucesso!"
else
    echo "‚ùå Falha na inicializa√ß√£o do banco de dados!"
    echo "‚ö†Ô∏è C√≥digo de sa√≠da: $DB_INIT_RESULT"
fi

# Pr√©-aquecimento do servi√ßo (opcional)
echo "üî• Iniciando pr√©-aquecimento do servi√ßo..."
python prewarm_service.py &
PREWARM_PID=$!

# Aguarda um pouco para o pr√©-aquecimento
sleep 5

echo "üöÄ Iniciando aplica√ß√£o com otimiza√ß√µes..."
echo "üîß Configura√ß√µes otimizadas:"
echo "   - Host: 0.0.0.0"
echo "   - Porta: 8000"
echo "   - Workers: 4"
echo "   - Log level: info"
echo "   - Preload: enabled"
echo "   - Keep-alive: enabled"
echo "   - Pre-warming: enabled"

# Inicia a aplica√ß√£o com otimiza√ß√µes
exec uvicorn main:app \
    --host 0.0.0.0 \
    --port 8000 \
    --workers 4 \
    --log-level info \
    --access-log \
    --use-colors \
    --timeout-keep-alive 30 \
    --limit-concurrency 1000 \
    --limit-max-requests 10000 